
import java.util.Scanner;

public class Main {
  
    public static Scanner keyboard = new Scanner(System.in);

    public static void main(String[] args) {
    
        int sourceSystem = 0;
        int targetSystem = 1;

        printIntro();   
        printAvailableSystems();  

        sourceSystem = getEnteredSystem(sourceSystem);
        targetSystem = getEnteredSystem(targetSystem);
        printUserDecision(sourceSystem, targetSystem);

        long userNumber = getEnteredNumberFromUser();
        
        long result = getMatchingConverter(targetSystem).processUserRequest(userNumber, sourceSystem, targetSystem);
        printResult(result);  
    }

    public static void printIntro(){
    
        String intro = "";
        intro += "Willkommen beim Zahlenkonverter\n";
        intro += "Folgende Zahlensystemekönnen ineinander konvertiert werden:" ;
        System.out.println(intro);
    }

    public static void printAvailableSystems(){
        
        String systems = "";
        systems += "2:  Binärzahlensystem\n";
        systems += "8:  Oktalzahlensystem\n";
        systems += "10: Dezimalzahlensystem\n";
        systems += "16: Hexadezimalzahlensystem";
        System.out.println(systems);
    }

    public static int getEnteredSystem(int systemType)
    {
        String type = "";
        if(systemType == 0)
        {
            type = "Quell";
        }
        else if(systemType == 1)
        {
            type = "Ziel";
        }
        System.out.println("Bitte geben sie die entsprechende Zahl für Ihr "+type+"-Zahlensystem ein: ");
        return keyboard.nextInt();
    }

    public static void printUserDecision(int sourceSystem, int targetSystem){

        String source = getNumberType(sourceSystem);
        String target = getNumberType(targetSystem);
        String decision = "Sie möchten eine " + source + " in eine " +target+ " konvertieren.";
        System.out.println(decision);
    }

    protected static String getNumberType(int system)
    {
        switch(system)
        {
            case 2: return "Binärzahl";
            case 8: return "Oktalzahl"; 
            case 10: return "Dezimalzahl";
            case 16: return "Hexadezimalzahl";
        }
        return "Der eingegebene Zahlentyp wird nicht unterstützt";
    }

    public static long getEnteredNumberFromUser()
    {
        String userNumberChoice = "Bitte geben Sie die Zahl ein, die Sie konvertieren möchten:";
        System.out.print(userNumberChoice);
        return Long.parseLong(keyboard.next());
    }

    public static void printResult(long result)
    {
        System.out.println(result);
    }

    public static Converter getMatchingConverter(int targetSystem)
    {
        switch(targetSystem)
        {
            case 2:  return new Binary(); 
            //case 8:  return new Octal(); 
            //case 10: return new Decimal(); 
            //case 16: return new Hexadecimal();       
        } 
        System.out.print("Das eingegebene Zahlensystem wird nicht unterstützt.");
        return null;
    }

}

class Converter {

    public Converter(){  
    }

    public long processUserRequest(long userNumber, int sourceSystem, int targetSystem)
    {
        long decimalNumber;

        if(sourceSystem == 10)
        {
            decimalNumber = userNumber;
        }
        else
        {
            decimalNumber = getConvertedToDecimal(userNumber, sourceSystem); 
        }   
               
        long result = getResult(decimalNumber, targetSystem);

        return result;
    }

    private long getConvertedToDecimal(long userNumber, int sourceSystem)
    {
        return 0;
    }

    private long getResult(long decimalNumber, int targetSystem)
    {
        return 0;
    }

}

class Binary extends Converter{


    private long getConvertedToDecimal(long userNumber, long sourceSystem)
    {
        String numString = userNumber + "";
        String[] binary = numString.split("");
        
        System.out.println(binary);

        //for(int i = binarylength; i > 0; i--)
       // {
        //    long base = Long.parseLong(binary[i]);
       //     decimalNumber += Math.pow(base ,sourceSystem);
       // }
        return 0;
    }

}

